cmake_minimum_required(VERSION 3.5)
project(brake_server)

if(NOT CMAKE_CXX_STANDARD)
  set(CMAKE_CXX_STANDARD 14)
  set(CMAKE_CXX_STANDARD_REQUIRED ON)
  set(CMAKE_CXX_EXTENSIONS OFF)
endif()
if(CMAKE_COMPILER_IS_GNUCXX OR CMAKE_CXX_COMPILER_ID MATCHES "Clang")
  add_compile_options(-Wall -Wextra -Wpedantic)
endif()

# find dependencies
find_package(ament_cmake_auto REQUIRED)

find_package(rclcpp REQUIRED)

find_package(serial REQUIRED)
find_package(sensor_msgs REQUIRED)
find_package(tf2 REQUIRED)
find_package(rosidl_default_generators REQUIRED)
find_package(Boost REQUIRED thread)

# uncomment the following section in order to fill in
# further dependencies manually.
ament_auto_find_build_dependencies()
include_directories(
  include
  ${Boost_INCLUDE_DIRS}
)
rosidl_generate_interfaces(${PROJECT_NAME}
  "srv/ControlService.srv"
  DEPENDENCIES std_msgs
)
ament_export_dependencies(
  rosidl_default_runtime
  Boost)

# Generate exe file
ament_auto_add_library(brake_interface_node SHARED
  src/brake_interface_node.cpp
)
rosidl_target_interfaces(brake_interface_node
  ${PROJECT_NAME} "rosidl_typesupport_cpp")

rclcpp_components_register_node(brake_interface_node
  PLUGIN "BrakeInterfaceNode"
  EXECUTABLE brake_interface
)


if(BUILD_TESTING)
  find_package(ament_lint_auto REQUIRED)
  # the following line skips the linter which checks for copyrights
  # uncomment the line when a copyright and license is not present in all source files
  #set(ament_cmake_copyright_FOUND TRUE)
  # the following line skips cpplint (only works in a git repo)
  # uncomment the line when this package is not in a git repo
  #set(ament_cmake_cpplint_FOUND TRUE)
  ament_lint_auto_find_test_dependencies()
endif()

ament_auto_package(INSTALL_TO_SHARE)

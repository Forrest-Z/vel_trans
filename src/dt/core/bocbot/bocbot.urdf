<?xml version="1.0" ?>
<!-- =================================================================================== -->
<!-- |    This document was autogenerated by xacro from /home/l0107/Documents/bocbot_ws/src/bocbot/urdf/bocbot.urdf.xacro | -->
<!-- |    EDITING THIS FILE BY HAND IS NOT RECOMMENDED                                 | -->
<!-- =================================================================================== -->
<robot name="bocbot">
  <!--skid_steer_drive_controller-->
  <gazebo>
    <plugin filename="libgazebo_ros_diff_drive.so" name="skid_steer_drive_controller">
      <ros>
        <namespace>/bocbot</namespace>
        <argument>/cmd_vel:=mr_cme_vel</argument>
        <argument>/odom:=odom</argument>
      </ros>
      <update_rate>100.0</update_rate>
      <num_wheel_pairs>2</num_wheel_pairs>
      <odometry_frame>odom</odometry_frame>
      <left_joint>front_left_wheel_joint</left_joint>
      <left_joint>back_left_wheel_joint</left_joint>
      <wheel_separation>0.4</wheel_separation>
      <wheel_diameter>0.2</wheel_diameter>
      <right_joint>front_right_wheel_joint</right_joint>
      <right_joint>back_right_wheel_joint</right_joint>
      <wheel_separation>0.4</wheel_separation>
      <wheel_diameter>0.2</wheel_diameter>
      <robot_base_frame>robot_footprint</robot_base_frame>
      <max_wheel_torque>20</max_wheel_torque>
      <publish_odom>true</publish_odom>
      <publish_odom_tf>true</publish_odom_tf>
      <publish_wheel_tf>true</publish_wheel_tf>
      <odometry_source>world</odometry_source>
    </plugin>
  </gazebo>
  <!-- camera -->
  <gazebo reference="camera">
    <sensor name="camera_sensor" type="camera">
      <update_rate>30.0</update_rate>
      <always_on>1</always_on>
      <camera name="camera">
        <horizontal_fov>1.3962634</horizontal_fov>
        <image>
          <width>800</width>
          <height>800</height>
          <format>R8G8B8</format>
        </image>
        <clip>
          <near>0.02</near>
          <far>300</far>
        </clip>
        <distortion>
          <k1>0.0</k1>
          <k2>0.0</k2>
          <k3>0.0</k3>
          <p1>0.0</p1>
          <p2>0.0</p2>
          <center>0.5 0.5</center>
        </distortion>
      </camera>
      <plugin filename="libgazebo_ros_camera.so" name="camera_controller">
        <ros>
          <namespace>/bocbot</namespace>
          <argument>camera/image_raw:=/bocbot/camera/image</argument>
          <argument>camera/camera_info:=/bocbot/camera/image/camera_info</argument>
        </ros>
        <camera_name>camera</camera_name>
        <frame_name>camera</frame_name>
        <hack_baseline>0.07</hack_baseline>
      </plugin>
    </sensor>
  </gazebo>
  <!-- hokuyo -->
  <gazebo reference="hokuyo">
    <sensor name="head_hokuyo_sensor" type="ray">
      <pose>0 0 0 0 0 0</pose>
      <visualize>false</visualize>
      <update_rate>40</update_rate>
      <ray>
        <scan>
          <horizontal>
            <samples>720</samples>
            <resolution>1</resolution>
            <min_angle>-1.570796</min_angle>
            <max_angle>1.570796</max_angle>
          </horizontal>
        </scan>
        <range>
          <min>0.10</min>
          <max>30.0</max>
          <resolution>0.01</resolution>
        </range>
        <noise>
          <type>gaussian</type>
          <!-- Noise parameters based on published spec for Hokuyo laser
                achieving "+-30mm" accuracy at range < 10m.  A mean of 0.0m and
                stddev of 0.01m will put 99.7% of samples within 0.03m of the true
                reading. -->
          <mean>0.0</mean>
          <stddev>0.01</stddev>
        </noise>
      </ray>
      <update_rate>30</update_rate>
      <plugin filename="libgazebo_ros_ray_sensor.so" name="gazebo_ros_head_hokuyo_controller">
        <ros>
          <namespace>/bocbot</namespace>
          <argument>~/out:=scan</argument>
        </ros>
        <output_type>sensor_msgs/LaserScan</output_type>
      </plugin>
    </sensor>
  </gazebo>
  <gazebo reference="camera0_link">
    <turnGravityOff>false</turnGravityOff>
    <sensor name="realsense_depth" type="depth">
      <update_rate>30.0</update_rate>
      <camera>
        <!-- 75x65 degree FOV for the depth sensor -->
        <horizontal_fov>1.5184351666666667</horizontal_fov>
        <vertical_fov>1.0122901111111111</vertical_fov>
        <image>
          <width>640</width>
          <height>480</height>
          <!-- TODO: check what format the Realsense hardware delivers and set this to match! -->
          <format>RGB8</format>
        </image>
        <clip>
          <!-- give the color sensor a maximum range of 50m so that the simulation renders nicely -->
          <near>0.01</near>
          <far>50.0</far>
        </clip>
      </camera>
      <plugin filename="libgazebo_ros_openni_kinect.so" name="kinect_controller">
        <baseline>0.2</baseline>
        <alwaysOn>true</alwaysOn>
        <updateRate>30</updateRate>
        <cameraName>camera0</cameraName>
        <imageTopicName>color/image_raw</imageTopicName>
        <cameraInfoTopicName>color/camera_info</cameraInfoTopicName>
        <depthImageTopicName>depth/image_rect_raw</depthImageTopicName>
        <depthImageInfoTopicName>depth/camera_info</depthImageInfoTopicName>
        <pointCloudTopicName>depth/color/points</pointCloudTopicName>
        <frameName>camera0_link</frameName>
        <pointCloudCutoff>0.1</pointCloudCutoff>
        <pointCloudCutoffMax>10.0</pointCloudCutoffMax>
        <distortionK1>0.00000001</distortionK1>
        <distortionK2>0.00000001</distortionK2>
        <distortionK3>0.00000001</distortionK3>
        <distortionT1>0.00000001</distortionT1>
        <distortionT2>0.00000001</distortionT2>
        <CxPrime>0</CxPrime>
        <Cx>0</Cx>
        <Cy>0</Cy>
        <focalLength>0</focalLength>
        <hackBaseline>0</hackBaseline>
      </plugin>
    </sensor>
  </gazebo>
  <gazebo reference="camera1_link">
    <turnGravityOff>false</turnGravityOff>
    <sensor name="realsense_depth" type="depth">
      <update_rate>30.0</update_rate>
      <camera>
        <!-- 75x65 degree FOV for the depth sensor -->
        <horizontal_fov>1.5184351666666667</horizontal_fov>
        <vertical_fov>1.0122901111111111</vertical_fov>
        <image>
          <width>640</width>
          <height>480</height>
          <!-- TODO: check what format the Realsense hardware delivers and set this to match! -->
          <format>RGB8</format>
        </image>
        <clip>
          <!-- give the color sensor a maximum range of 50m so that the simulation renders nicely -->
          <near>0.01</near>
          <far>50.0</far>
        </clip>
      </camera>
      <plugin filename="libgazebo_ros_openni_kinect.so" name="kinect_controller">
        <baseline>0.2</baseline>
        <alwaysOn>true</alwaysOn>
        <updateRate>30</updateRate>
        <cameraName>camera1</cameraName>
        <imageTopicName>color/image_raw</imageTopicName>
        <cameraInfoTopicName>color/camera_info</cameraInfoTopicName>
        <depthImageTopicName>depth/image_rect_raw</depthImageTopicName>
        <depthImageInfoTopicName>depth/camera_info</depthImageInfoTopicName>
        <pointCloudTopicName>depth/color/points</pointCloudTopicName>
        <frameName>camera1_link</frameName>
        <pointCloudCutoff>0.1</pointCloudCutoff>
        <pointCloudCutoffMax>10.0</pointCloudCutoffMax>
        <distortionK1>0.00000001</distortionK1>
        <distortionK2>0.00000001</distortionK2>
        <distortionK3>0.00000001</distortionK3>
        <distortionT1>0.00000001</distortionT1>
        <distortionT2>0.00000001</distortionT2>
        <CxPrime>0</CxPrime>
        <Cx>0</Cx>
        <Cy>0</Cy>
        <focalLength>0</focalLength>
        <hackBaseline>0</hackBaseline>
      </plugin>
    </sensor>
  </gazebo>
  <gazebo reference="camera2_link">
    <turnGravityOff>false</turnGravityOff>
    <sensor name="realsense_depth" type="depth">
      <update_rate>30.0</update_rate>
      <camera>
        <!-- 75x65 degree FOV for the depth sensor -->
        <horizontal_fov>1.5184351666666667</horizontal_fov>
        <vertical_fov>1.0122901111111111</vertical_fov>
        <image>
          <width>640</width>
          <height>480</height>
          <!-- TODO: check what format the Realsense hardware delivers and set this to match! -->
          <format>RGB8</format>
        </image>
        <clip>
          <!-- give the color sensor a maximum range of 50m so that the simulation renders nicely -->
          <near>0.01</near>
          <far>50.0</far>
        </clip>
      </camera>
      <plugin filename="libgazebo_ros_openni_kinect.so" name="kinect_controller">
        <baseline>0.2</baseline>
        <alwaysOn>true</alwaysOn>
        <updateRate>30</updateRate>
        <cameraName>camera2</cameraName>
        <imageTopicName>color/image_raw</imageTopicName>
        <cameraInfoTopicName>color/camera_info</cameraInfoTopicName>
        <depthImageTopicName>depth/image_rect_raw</depthImageTopicName>
        <depthImageInfoTopicName>depth/camera_info</depthImageInfoTopicName>
        <pointCloudTopicName>depth/color/points</pointCloudTopicName>
        <frameName>camera2_link</frameName>
        <pointCloudCutoff>0.1</pointCloudCutoff>
        <pointCloudCutoffMax>10.0</pointCloudCutoffMax>
        <distortionK1>0.00000001</distortionK1>
        <distortionK2>0.00000001</distortionK2>
        <distortionK3>0.00000001</distortionK3>
        <distortionT1>0.00000001</distortionT1>
        <distortionT2>0.00000001</distortionT2>
        <CxPrime>0</CxPrime>
        <Cx>0</Cx>
        <Cy>0</Cy>
        <focalLength>0</focalLength>
        <hackBaseline>0</hackBaseline>
      </plugin>
    </sensor>
  </gazebo>
  <gazebo reference="camera3_link">
    <turnGravityOff>false</turnGravityOff>
    <sensor name="realsense_depth" type="depth">
      <update_rate>30.0</update_rate>
      <camera>
        <!-- 75x65 degree FOV for the depth sensor -->
        <horizontal_fov>1.5184351666666667</horizontal_fov>
        <vertical_fov>1.0122901111111111</vertical_fov>
        <image>
          <width>640</width>
          <height>480</height>
          <!-- TODO: check what format the Realsense hardware delivers and set this to match! -->
          <format>RGB8</format>
        </image>
        <clip>
          <!-- give the color sensor a maximum range of 50m so that the simulation renders nicely -->
          <near>0.01</near>
          <far>50.0</far>
        </clip>
      </camera>
      <plugin filename="libgazebo_ros_openni_kinect.so" name="kinect_controller">
        <baseline>0.2</baseline>
        <alwaysOn>true</alwaysOn>
        <updateRate>30</updateRate>
        <cameraName>camera3</cameraName>
        <imageTopicName>color/image_raw</imageTopicName>
        <cameraInfoTopicName>color/camera_info</cameraInfoTopicName>
        <depthImageTopicName>depth/image_rect_raw</depthImageTopicName>
        <depthImageInfoTopicName>depth/camera_info</depthImageInfoTopicName>
        <pointCloudTopicName>depth/color/points</pointCloudTopicName>
        <frameName>camera3_link</frameName>
        <pointCloudCutoff>0.1</pointCloudCutoff>
        <pointCloudCutoffMax>10.0</pointCloudCutoffMax>
        <distortionK1>0.00000001</distortionK1>
        <distortionK2>0.00000001</distortionK2>
        <distortionK3>0.00000001</distortionK3>
        <distortionT1>0.00000001</distortionT1>
        <distortionT2>0.00000001</distortionT2>
        <CxPrime>0</CxPrime>
        <Cx>0</Cx>
        <Cy>0</Cy>
        <focalLength>0</focalLength>
        <hackBaseline>0</hackBaseline>
      </plugin>
    </sensor>
  </gazebo>
  <gazebo reference="camera4_link">
    <turnGravityOff>false</turnGravityOff>
    <sensor name="realsense_depth" type="depth">
      <update_rate>30.0</update_rate>
      <camera>
        <!-- 75x65 degree FOV for the depth sensor -->
        <horizontal_fov>1.5184351666666667</horizontal_fov>
        <vertical_fov>1.0122901111111111</vertical_fov>
        <image>
          <width>640</width>
          <height>480</height>
          <!-- TODO: check what format the Realsense hardware delivers and set this to match! -->
          <format>RGB8</format>
        </image>
        <clip>
          <!-- give the color sensor a maximum range of 50m so that the simulation renders nicely -->
          <near>0.01</near>
          <far>50.0</far>
        </clip>
      </camera>
      <plugin filename="libgazebo_ros_openni_kinect.so" name="kinect_controller">
        <baseline>0.2</baseline>
        <alwaysOn>true</alwaysOn>
        <updateRate>30</updateRate>
        <cameraName>camera4</cameraName>
        <imageTopicName>color/image_raw</imageTopicName>
        <cameraInfoTopicName>color/camera_info</cameraInfoTopicName>
        <depthImageTopicName>depth/image_rect_raw</depthImageTopicName>
        <depthImageInfoTopicName>depth/camera_info</depthImageInfoTopicName>
        <pointCloudTopicName>depth/color/points</pointCloudTopicName>
        <frameName>camera4_link</frameName>
        <pointCloudCutoff>0.1</pointCloudCutoff>
        <pointCloudCutoffMax>10.0</pointCloudCutoffMax>
        <distortionK1>0.00000001</distortionK1>
        <distortionK2>0.00000001</distortionK2>
        <distortionK3>0.00000001</distortionK3>
        <distortionT1>0.00000001</distortionT1>
        <distortionT2>0.00000001</distortionT2>
        <CxPrime>0</CxPrime>
        <Cx>0</Cx>
        <Cy>0</Cy>
        <focalLength>0</focalLength>
        <hackBaseline>0</hackBaseline>
      </plugin>
    </sensor>
  </gazebo>
  <gazebo reference="camera5_link">
    <turnGravityOff>false</turnGravityOff>
    <sensor name="realsense_depth" type="depth">
      <update_rate>30.0</update_rate>
      <camera>
        <!-- 75x65 degree FOV for the depth sensor -->
        <horizontal_fov>1.5184351666666667</horizontal_fov>
        <vertical_fov>1.0122901111111111</vertical_fov>
        <image>
          <width>640</width>
          <height>480</height>
          <!-- TODO: check what format the Realsense hardware delivers and set this to match! -->
          <format>RGB8</format>
        </image>
        <clip>
          <!-- give the color sensor a maximum range of 50m so that the simulation renders nicely -->
          <near>0.01</near>
          <far>50.0</far>
        </clip>
      </camera>
      <plugin filename="libgazebo_ros_openni_kinect.so" name="kinect_controller">
        <baseline>0.2</baseline>
        <alwaysOn>true</alwaysOn>
        <updateRate>30</updateRate>
        <cameraName>camera5</cameraName>
        <imageTopicName>color/image_raw</imageTopicName>
        <cameraInfoTopicName>color/camera_info</cameraInfoTopicName>
        <depthImageTopicName>depth/image_rect_raw</depthImageTopicName>
        <depthImageInfoTopicName>depth/camera_info</depthImageInfoTopicName>
        <pointCloudTopicName>depth/color/points</pointCloudTopicName>
        <frameName>camera5_link</frameName>
        <pointCloudCutoff>0.1</pointCloudCutoff>
        <pointCloudCutoffMax>10.0</pointCloudCutoffMax>
        <distortionK1>0.00000001</distortionK1>
        <distortionK2>0.00000001</distortionK2>
        <distortionK3>0.00000001</distortionK3>
        <distortionT1>0.00000001</distortionT1>
        <distortionT2>0.00000001</distortionT2>
        <CxPrime>0</CxPrime>
        <Cx>0</Cx>
        <Cy>0</Cy>
        <focalLength>0</focalLength>
        <hackBaseline>0</hackBaseline>
      </plugin>
    </sensor>
  </gazebo>
  <link name="robot_footprint"/>
  <joint name="robot_footprint_joint" type="fixed">
    <origin rpy="0 0 0" xyz="0 0 0"/>
    <parent link="robot_footprint"/>
    <child link="chassis"/>
  </joint>
  <link name="chassis">
    <pose>0 0 0.1 0 0 0</pose>
    <inertial>
      <mass value="15.0"/>
      <origin rpy=" 0 0 0" xyz="0.0 0 0"/>
      <inertia ixx="0.1" ixy="0" ixz="0" iyy="0.1" iyz="0" izz="0.1"/>
    </inertial>
    <collision name="collision">
      <origin rpy=" 0 0 0" xyz="0 0 0"/>
      <geometry>
        <box size=".4 .2 .1"/>
      </geometry>
    </collision>
    <visual name="chassis_visual">
      <origin rpy=" 0 0 0" xyz="0 0 0"/>
      <geometry>
        <box size=".4 .2 .1"/>
      </geometry>
    </visual>
  </link>
  <link name="front_left_wheel">
    <inertial>
      <mass value="5.0"/>
      <origin rpy=" 0 1.5707 1.5707" xyz="0.0 0 0"/>
      <inertia ixx="0.1" ixy="0" ixz="0" iyy="0.1" iyz="0" izz="0.1"/>
    </inertial>
    <visual>
      <origin rpy=" 0 1.5707 1.5707" xyz="0.0 0 0"/>
      <geometry>
        <cylinder length="0.05" radius="0.1"/>
      </geometry>
    </visual>
    <collision>
      <origin rpy=" 0 1.5707 1.5707" xyz="0.0 0 0"/>
      <geometry>
        <cylinder length="0.05" radius="0.1"/>
      </geometry>
    </collision>
  </link>
  <link name="back_left_wheel">
    <inertial>
      <mass value="5.0"/>
      <origin rpy=" 0 1.5707 1.5707" xyz="0.0 0 0"/>
      <inertia ixx="0.1" ixy="0" ixz="0" iyy="0.1" iyz="0" izz="0.1"/>
    </inertial>
    <visual>
      <origin rpy=" 0 1.5707 1.5707" xyz="0.0 0 0"/>
      <geometry>
        <cylinder length="0.05" radius="0.1"/>
      </geometry>
    </visual>
    <collision>
      <origin rpy=" 0 1.5707 1.5707" xyz="0.0 0 0"/>
      <geometry>
        <cylinder length="0.05" radius="0.1"/>
      </geometry>
    </collision>
  </link>
  <link name="front_right_wheel">
    <inertial>
      <mass value="5.0"/>
      <origin rpy=" 0 1.5707 1.5707" xyz="0.0 0 0"/>
      <inertia ixx="0.1" ixy="0" ixz="0" iyy="0.1" iyz="0" izz="0.1"/>
    </inertial>
    <visual>
      <origin rpy=" 0 1.5707 1.5707" xyz="0.0 0 0"/>
      <geometry>
        <cylinder length="0.05" radius="0.1"/>
      </geometry>
    </visual>
    <collision>
      <origin rpy=" 0 1.5707 1.5707" xyz="0.0 0 0"/>
      <geometry>
        <cylinder length="0.05" radius="0.1"/>
      </geometry>
    </collision>
  </link>
  <link name="back_right_wheel">
    <inertial>
      <mass value="5.0"/>
      <origin rpy=" 0 1.5707 1.5707" xyz="0.0 0 0"/>
      <inertia ixx="0.1" ixy="0" ixz="0" iyy="0.1" iyz="0" izz="0.1"/>
    </inertial>
    <visual>
      <origin rpy=" 0 1.5707 1.5707" xyz="0.0 0 0"/>
      <geometry>
        <cylinder length="0.05" radius="0.1"/>
      </geometry>
    </visual>
    <collision>
      <origin rpy=" 0 1.5707 1.5707" xyz="0.0 0 0"/>
      <geometry>
        <cylinder length="0.05" radius="0.1"/>
      </geometry>
    </collision>
  </link>
  <link name="camera">
    <inertial>
      <mass value="0.1"/>
      <origin rpy=" 0 0 0" xyz="0.05 0.05 0.05"/>
      <inertia ixx="1e-6" ixy="0" ixz="0" iyy="1e-6" iyz="0" izz="1e-6"/>
    </inertial>
    <visual name="camera_visual">
      <origin rpy="0 0 0" xyz="0 0 0"/>
      <geometry>
        <box size="0.05 0.05 0.05"/>
      </geometry>
    </visual>
    <collision name="camera_colision">
      <origin rpy="0 0 0" xyz="0 0 0"/>
      <geometry>
        <box size="0.05 0.05 0.05"/>
      </geometry>
    </collision>
  </link>
  <link name="hokuyo">
    <inertial>
      <mass value="1e-5"/>
      <origin rpy=" 0 0 0" xyz="0 0 0"/>
      <inertia ixx="1e-6" ixy="0" ixz="0" iyy="1e-6" iyz="0" izz="1e-6"/>
    </inertial>
    <visual name="hokuyo_visual">
      <origin rpy="0 0 0" xyz="0 0 0"/>
      <geometry>
        <!-- <mesh filename="$(find bocbot)/meshes/hokuyo.dae"/> -->
        <box size="0.05 0.05 0.05"/>
      </geometry>
    </visual>
    <collision name="hokuyo_colision">
      <origin rpy="0 0 0" xyz="0 0 0"/>
      <geometry>
        <box size="0.1 0.1 0.1"/>
      </geometry>
    </collision>
  </link>
  <joint name="front_left_wheel_joint" type="continuous">
    <origin rpy="0 0 0" xyz="0.12 0.15 0"/>
    <child link="front_left_wheel"/>
    <parent link="chassis"/>
    <axis rpy="0 0 0" xyz="0 1 0"/>
    <limit effort="10000" velocity="1000"/>
    <dynamics damping="1.0" friction="1.0"/>
  </joint>
  <joint name="front_right_wheel_joint" type="continuous">
    <origin rpy="0 0 0" xyz="0.12 -0.15 0"/>
    <child link="front_right_wheel"/>
    <parent link="chassis"/>
    <axis rpy="0 0 0" xyz="0 1 0"/>
    <limit effort="10000" velocity="1000"/>
    <dynamics damping="1.0" friction="1.0"/>
  </joint>
  <joint name="back_left_wheel_joint" type="continuous">
    <origin rpy="0 0 0" xyz="-0.12 0.15 0"/>
    <child link="back_left_wheel"/>
    <parent link="chassis"/>
    <axis rpy="0 0 0" xyz="0 1 0"/>
    <limit effort="10000" velocity="1000"/>
    <dynamics damping="1.0" friction="1.0"/>
  </joint>
  <joint name="back_right_wheel_joint" type="continuous">
    <origin rpy="0 0 0" xyz="-0.12 -0.15 0"/>
    <child link="back_right_wheel"/>
    <parent link="chassis"/>
    <axis rpy="0 0 0" xyz="0 1 0"/>
    <limit effort="10000" velocity="1000"/>
    <dynamics damping="1.0" friction="1.0"/>
  </joint>
  <joint name="camera_joint" type="fixed">
    <origin rpy="0 0 0" xyz="0.2 0 0"/>
    <child link="camera"/>
    <parent link="chassis"/>
    <axis rpy="0 0 0" xyz="0 1 0"/>
  </joint>
  <joint name="hokuyo_joint" type="fixed">
    <origin rpy="0 0 0" xyz="0.15 0 0.1"/>
    <child link="hokuyo"/>
    <parent link="chassis"/>
    <axis rpy="0 0 0" xyz="0 1 0"/>
  </joint>
  <gazebo reference="chassis">
    <material>Gazebo/Blue</material>
  </gazebo>
  <gazebo reference="camera">
    <material>Gazebo/Red</material>
  </gazebo>
  <gazebo reference="hokuyo">
    <material>Gazebo/Black</material>
  </gazebo>
  <link name="camera0_link">
    <visual>
      <origin rpy="0 0 0" xyz=" 0 0 0 "/>
      <geometry>
        <sphere radius="0.01"/>
      </geometry>
      <material name="black">
        <color rgba="0 0 0 0.95"/>
      </material>
    </visual>
  </link>
  <joint name="realsense_frame_joint" type="fixed">
    <origin rpy="0 0 0" xyz="0 0 0.5"/>
    <parent link="chassis"/>
    <child link="camera0_link"/>
  </joint>
  <link name="camera1_link">
    <visual>
      <origin rpy="0 0 0" xyz=" 0 0 0 "/>
      <geometry>
        <sphere radius="0.01"/>
      </geometry>
      <material name="black">
        <color rgba="0 0 0 0.95"/>
      </material>
    </visual>
  </link>
  <joint name="camera1_joint" type="fixed">
    <origin rpy="0 0 1.0471975511965976" xyz="0.00 0 0.5"/>
    <parent link="chassis"/>
    <child link="camera1_link"/>
  </joint>
  <link name="camera2_link">
    <visual>
      <origin rpy="0 0 0" xyz=" 0 0 0 "/>
      <geometry>
        <sphere radius="0.01"/>
      </geometry>
      <material name="black">
        <color rgba="0 0 0 0.95"/>
      </material>
    </visual>
  </link>
  <joint name="camera2_joint" type="fixed">
    <origin rpy="0 0 2.0943951023931953" xyz="0.00 0 0.5"/>
    <parent link="chassis"/>
    <child link="camera2_link"/>
  </joint>
  <link name="camera3_link">
    <visual>
      <origin rpy="0 0 0" xyz=" 0 0 0 "/>
      <geometry>
        <sphere radius="0.01"/>
      </geometry>
      <material name="black">
        <color rgba="0 0 0 0.95"/>
      </material>
    </visual>
  </link>
  <joint name="camera3_joint" type="fixed">
    <origin rpy="0 0 3.141592653589793" xyz="0.00 0 0.5"/>
    <parent link="chassis"/>
    <child link="camera3_link"/>
  </joint>
  <link name="camera4_link">
    <visual>
      <origin rpy="0 0 0" xyz=" 0 0 0 "/>
      <geometry>
        <sphere radius="0.01"/>
      </geometry>
      <material name="black">
        <color rgba="0 0 0 0.95"/>
      </material>
    </visual>
  </link>
  <joint name="camera4_joint" type="fixed">
    <origin rpy="0 0 -2.0943951023931953" xyz="0.00 0 0.5"/>
    <parent link="chassis"/>
    <child link="camera4_link"/>
  </joint>
  <link name="camera5_link">
    <visual>
      <origin rpy="0 0 0" xyz=" 0 0 0 "/>
      <geometry>
        <sphere radius="0.01"/>
      </geometry>
      <material name="black">
        <color rgba="0 0 0 0.95"/>
      </material>
    </visual>
  </link>
  <joint name="camera5_joint" type="fixed">
    <origin rpy="0 0 -1.0471975511965976 " xyz="0.00 0 0.5"/>
    <parent link="chassis"/>
    <child link="camera5_link"/>
  </joint>
</robot>
